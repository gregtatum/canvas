{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "002-wandering-lines/index.js",
    "lib/draw.js",
    "lib/intersection.js",
    "lib/shortcuts.js",
    "node_modules/@tatumcreative/random/prng/alea.js",
    "node_modules/@tatumcreative/random/random.js",
    "node_modules/keycode/index.js",
    "node_modules/lerp/index.js",
    "node_modules/rbush/rbush.js",
    "node_modules/simplex-noise/simplex-noise.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "var Rbush        = require('rbush')\nvar Simplex      = require('simplex-noise')\nvar Lerp         = require('lerp')\nvar Random       = require('@tatumcreative/random')\nvar Intersection = require('../lib/intersection')\nvar Draw         = require('../lib/draw')\nvar Shortcuts    = require('../lib/shortcuts')\nvar TAU          = Math.PI * 2\n\nfunction _cutOutIntersections( neighbors, bounds ) {\n\n\tvar lineEnd\n\tvar lastDistance = Infinity\n\n\tvar a = bounds.line\n\n\tneighbors.forEach(function(neighbor) {\n\n\t\tvar b = neighbor.line\n\n\t\tvar intersection = Intersection(\n\t\t\ta[0], a[1], a[2], a[3],\n\t\t\tb[0], b[1], b[2], b[3]\n\t\t)\n\t\tif( intersection ) {\n\t\t\tvar intersectionDistance = (\n\t\t\t\t( intersection[0] - a[0] ) * ( intersection[0] - a[0] )  +\n\t\t\t\t( intersection[1] - a[1] ) * ( intersection[1] - a[1] )\n\t\t\t)\n\t\t\tif( intersectionDistance < lastDistance ) {\n\t\t\t\tlastDistance = intersectionDistance\n\t\t\t\tlineEnd = intersection\n\t\t\t}\n\t\t}\n\t})\n\n\tif( lineEnd ) {\n\t\treturn _lineToBounds([ a[0], a[1], lineEnd[0], lineEnd[1] ])\n\t}\n\n\treturn false\n}\n\nfunction _lineToBounds( line ) {\n\n\tvar bounds = [\n\t\tMath.min(line[0],line[2]),\n\t\tMath.min(line[1],line[3]),\n\t\tMath.max(line[0],line[2]),\n\t\tMath.max(line[1],line[3]),\n\t]\n\n\tbounds.line = line\n\tbounds.theta = Math.atan2( line[3] - line[1], line[2] - line[0] )\n\treturn bounds\n}\n\nfunction _newLine( current, config, x, y, generation, now ) {\n\n\tvar noise = config.simplex3(\n\t\tx * config.simplexScale,\n\t\ty * config.simplexScale,\n\t\tnow * config.simplexDepthScale\n\t)\n\n\tvar theta = noise * TAU\n\n\tvar newX = x + Math.cos( theta ) * config.lineLength\n\tvar newY = y + Math.sin( theta ) * config.lineLength\n\n\tvar newBounds = _lineToBounds([ x, y, newX, newY ])\n\tvar neighbors = current.tree.search( newBounds )\n\n\tvar cutBounds = _cutOutIntersections( neighbors, newBounds )\n\n\tif( cutBounds ) {\n\t\tnewBounds = cutBounds\n\t}\n\tnewBounds.line.generation = generation\n\tcurrent.tree.insert( newBounds )\n\tcurrent.lines.push( newBounds.line )\n\tcurrent.newLines.push( newBounds.line )\n\n\tif( !cutBounds ) {\n\t\treturn newBounds\n\t}\n}\n\nfunction _createStageBoundary( config, current ) {\n\n\tvar centerX = 0.5\n\tvar centerY = 0.5\n\n\tvar size = config.margin * 0.5\n\n\tvar x1 = centerX - size\n\tvar x2 = centerX + size\n\tvar y1 = centerY - size\n\tvar y2 = centerY + size\n\n\t// current.tree.insert( _lineToBounds([x1,y1,x2,y1]) )\n\t// current.tree.insert( _lineToBounds([x2,y1,x2,y2]) )\n\t// current.tree.insert( _lineToBounds([x2,y2,x1,y2]) )\n\t// current.tree.insert( _lineToBounds([x1,y2,x1,y1]) )\n\n\tcurrent.stageBoundary = [\n\t\tLerp( centerX, x1, 0.5 ),\n\t\tLerp( centerY, y1, 0.5 ),\n\t\tLerp( centerX, x2, 0.5 ),\n\t\tLerp( centerY, y2, 0.5 ),\n\t]\n}\n\nfunction _updateLines( current, config ) {\n\tcurrent.iteration++\n\tcurrent.newLines.length = 0\n\n\tfor( var i=0; i < config.activeLines; i++ ) {\n\n\t\tvar bounds = current.active[i]\n\t\tvar x, y, generation\n\n\t\tif( current.firstRun ) {\n\t\t\tx = config.random( current.stageBoundary[0], current.stageBoundary[2] )\n\t\t\ty = config.random( current.stageBoundary[1], current.stageBoundary[3] )\n\t\t\tgeneration = Math.log(current.generation++)\n\t\t} else if( !bounds ) {\n\t\t\tbounds = _startBranch( current, config )\n\t\t}\n\n\t\tif( bounds ) {\n\t\t\tx = bounds.line[2]\n\t\t\ty = bounds.line[3]\n\t\t\tgeneration = bounds.generation\n\t\t}\n\n\t\tcurrent.active[i] = _newLine( current, config, x, y, generation, current.iteration )\n\t}\n\n\tcurrent.firstRun = false\n}\n\nfunction _startBranch( current, config ) {\n\n\tvar onStage = current.tree.search( current.stageBoundary )\n\n\tvar index = Math.floor(config.random(onStage.length))\n\tvar line = onStage[index].line\n\n\tvar dx = (line[2] - line[0]) * config.nubSize\n\tvar dy = (line[3] - line[1]) * config.nubSize\n\n\t// Choose either or side\n\tvar normal = config.random() > 0.5 ? [-dy, dx] : [dy, -dx]\n\n\tvar x = (line[0] + line[2]) / 2\n\tvar y = (line[1] + line[3]) / 2\n\n\tvar bounds = _lineToBounds([\n\t\tx + normal[0] * 0.5,\n\t\ty + normal[1] * 0.5,\n\t\tx + normal[0],\n\t\ty + normal[1]\n\t])\n\n\tbounds.line.generation = Math.pow((line.generation || 2), 2)\n\n\tcurrent.tree.insert( bounds )\n\tcurrent.lines.push( bounds.line )\n\tcurrent.newLines.push( bounds.line )\n\n\treturn bounds\n}\n\nfunction init() {\n\n\tvar seed = window.location.hash.substr(1) || String(Math.random()).split('.')[1]\n\tvar random = Random( seed )\n\tvar simplex = new Simplex( random )\n\tvar simplex3 = simplex.noise3D.bind(simplex)\n\n\tShortcuts(seed)\n\tconsole.log('current seed', seed)\n\n\tvar config = {\n\t\tmargin: 1.5,\n\t\tactiveLines : 20,\n\t\trandom : random,\n\t\tsimplex3 : simplex3,\n\t\tmaxAngle : Math.PI * 0.2,\n\t\tlineLength : 0.002,\n\t\tsimplexScale : 1,\n\t\tsimplexDepthScale : 0.0001,\n\t\tnubSize : 0.0001,\n\t}\n\n\tvar current = {\n\t\tfirstRun : true,\n\t\ttree : Rbush(9),\n\t\tactive : [],\n\t\tlines : [],\n\t\tnewLines : [],\n\t\tstageBoundary : null,\n\t\tgeneration : 2,\n\t\titeration : 0,\n\t}\n\n\t_createStageBoundary( config, current )\n\n\tvar draw = Draw( current )\n\n\tfunction loop() {\n\t\t_updateLines( current, config )\n\t\tdraw()\n\t\trequestAnimationFrame( loop )\n\t}\n\trequestAnimationFrame(loop)\n\n\twindow.onhashchange = function () {\n\t\tlocation.reload()\n\t}\n}\n\ninit()\n",
    "var TAU = Math.PI * 2\n\nfunction _drawLines(ctx, config, plot, lines) {\n\tctx.strokeStyle = config.lineColor\n\tctx.lineCap = 'round'\n\n\tfor (const line of lines) {\n\t\tctx.lineWidth = config.lineWidth\n\t\tctx.beginPath()\n\t\tctx.moveTo(\n\t\t\tplot.x(line[0], line[1]),\n\t\t\tplot.y(line[0], line[1])\n\t\t)\n\t\tctx.lineTo(\n\t\t\tplot.x(line[2], line[3]),\n\t\t\tplot.y(line[2], line[3])\n\t\t)\n\t\tctx.stroke()\n\t\tctx.closePath()\n\t}\n}\n\nfunction _prepCanvasAndGetCtx(canvas) {\n\n\tfunction resize() {\n\t\tcanvas.width = window.innerWidth * devicePixelRatio\n\t\tcanvas.height = window.innerHeight * devicePixelRatio\n\t}\n\tresize();\n\twindow.addEventListener('resize', resize, false)\n\n\treturn canvas.getContext('2d')\n}\n\nfunction _setupPlotting(config, current, canvas) {\n\t// [-1,1] range to approximately [0,canvas.size]\n\tfunction resize() {\n\t\tcurrent.ratio = canvas.width / canvas.height\n\n\t\tif( current.ratio < 1 ) {\n\t\t\tcurrent.width = canvas.width\n\t\t\tcurrent.height = canvas.height * current.ratio\n\t\t} else {\n\t\t\tcurrent.ratio = 1 / current.ratio\n\t\t\tcurrent.width = canvas.width * current.ratio\n\t\t\tcurrent.height = canvas.height\n\t\t}\n\n\t\tcurrent.offsetX = (canvas.width - current.width) / 2\n\t\tcurrent.offsetY = (canvas.height - current.height) / 2\n\n\t\tcurrent.size = (\n\t\t\tMath.sqrt(canvas.width * canvas.width + canvas.height * canvas.height)\n\t\t\t/ config.baseScreenDiagonal\n\t\t)\n\t}\n\tresize();\n\twindow.addEventListener('resize', resize, false)\n\n\tconst halfShrink = (1 - config.shrink) * 0.5;\n\n\treturn {\n\t\tx : function (x, y) {\n\t\t\treturn current.offsetX + (halfShrink + config.shrink * x) * current.width\n\t\t},\n\t\ty : function (x, y) {\n\t\t\treturn current.offsetY + (halfShrink + config.shrink * y) * current.height\n\t\t},\n\t\tline : function(n) {\n\t\t\treturn n * current.size\n\t\t}\n\t}\n}\n\nmodule.exports = function setupDraw(graph) {\n\tconst config = {\n\t\tshrink: 0.75,\n\t\tbaseScreenDiagonal : 1000,\n\t\tlineWidth : 2,\n\t\tlineColor : \"#ddd\",\n\t}\n\n\tconst current = {\n\t\tratio : 1,\n\t\twidth : 0,\n\t\theight : 0,\n\t}\n\n\tconst canvas = document.createElement('canvas')\n\tdocument.body.appendChild(canvas)\n\tconst ctx = _prepCanvasAndGetCtx(canvas)\n\tconst plot = _setupPlotting(config, current, canvas)\n\n\tfunction draw(redrawAll) {\n\t\t_drawLines(ctx, config, plot, graph.lines)\n\t}\n\n\twindow.addEventListener('resize', () => draw(true), false)\n\treturn draw\n}\n",
    "// Adapted from https://github.com/psalaets/line-intersect/\n// Paul Salaets <psalaets@gmail.com>\n// MIT License\n\nmodule.exports = function checkIntersection( x1, y1, x2, y2, x3, y3, x4, y4 ) {\n\t\n\tif(\n\t\t(x1 === x3 && y1 == y3) ||\n\t\t(x1 === x4 && y1 == y4) ||\n\t\t(x2 === x3 && y2 == y3) ||\n\t\t(x2 === x4 && y2 == y4)\n\t) {\n\t\treturn false\n\t}\n\t\t\n\t\n\tvar denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n\tvar numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n\tvar numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n\tif( denom === 0 || (numeA === 0 && numeB === 0) ) {\n\t\treturn false\n\t}\n\n\tvar uA = numeA / denom;\n\tvar uB = numeB / denom;\n\n\tif( uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1 ) {\n\t\treturn [\n\t\t\t(uA * (x2 - x1)) + x1,\n\t\t\t(uA * (y2 - y1)) + y1\n\t\t]\n\t}\n}",
    "var Keycode = require('keycode')\n\nfunction _click( selector ) {\n  var el = document.querySelector( selector )\n  if( el ) el.click()\n}\n\nfunction executeIfExists(fn) {\n  if(typeof fn === 'function') {\n    fn()\n  }\n}\n\nmodule.exports = function shortcuts(seed) {\n\n  window.addEventListener('keydown', function(event) {\n    switch (Keycode(event)) {\n      case \"h\":\n        document.body.classList.toggle('hide-ui')\n        break;\n      case \"r\":\n        window.location.reload()\n        break;\n      case \"s\":\n        history.pushState(null, document.title, window.location.pathname + \"#\" + seed)\n        break;\n      case \"f\":\n        if( document.fullscreenElement ) {\n          document.exitFullscreen ? document.exitFullscreen() : null\n        } else {\n          var canvas = document.querySelector('canvas')\n          canvas.requestFullscreen ? canvas.requestFullscreen() : null\n        }\n        break;\n      case \"left\":\n        _click('#prev')\n        break;\n      case \"right\":\n        _click('#next')\n        break;\n    }\n  }, false)\n\n}\n",
    "function _mashFn(){var r=4022871197;return function(n){n=n.toString();for(var t=0;t<n.length;t++){var e=.02519603282416938*(r+=n.charCodeAt(t));e-=r=e>>>0,r=(e*=r)>>>0,r+=4294967296*(e-=r)}return 2.3283064365386963e-10*(r>>>0)}}module.exports=function(){var r=Array.prototype.slice.call(arguments),n=0,t=0,e=0,a=1;0===r.length&&(r=[+new Date]);var o=_mashFn();n=t=e=o(\" \");for(var u=0;u<r.length;u++)(n-=o(r[u]))<0&&(n+=1),(t-=o(r[u]))<0&&(t+=1),(e-=o(r[u]))<0&&(e+=1);return function(){var r=2091639*n+2.3283064365386963e-10*a;return n=t,t=e,e=r-(a=0|r)}};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsZWEuanMiXSwibmFtZXMiOlsiX21hc2hGbiIsIm4iLCJkYXRhIiwidG9TdHJpbmciLCJpIiwibGVuZ3RoIiwiaCIsImNoYXJDb2RlQXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXJncyIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwiczAiLCJzMSIsInMyIiwiYyIsIkRhdGUiLCJtYXNoIiwidCJdLCJtYXBwaW5ncyI6IkFBRUEsU0FBU0EsVUFFUixJQUFJQyxFQUFJLFdBRVIsT0FBTyxTQUFlQyxHQUVyQkEsRUFBT0EsRUFBS0MsV0FFWixJQUFLLElBQUlDLEVBQUksRUFBR0EsRUFBSUYsRUFBS0csT0FBUUQsSUFBSyxDQUVyQyxJQUFJRSxFQUFJLG9CQURSTCxHQUFLQyxFQUFLSyxXQUFXSCxJQUdyQkUsR0FEQUwsRUFBSUssSUFBTSxFQUdWTCxHQURBSyxHQUFLTCxLQUNLLEVBRVZBLEdBQVMsWUFEVEssR0FBS0wsR0FHTixPQUFtQix3QkFBWEEsSUFBTSxJQUloQk8sT0FBT0MsUUFBVSxXQUVoQixJQUFJQyxFQUFPQyxNQUFNQyxVQUFVQyxNQUFNQyxLQUFLQyxXQUVsQ0MsRUFBSyxFQUNMQyxFQUFLLEVBQ0xDLEVBQUssRUFDTEMsRUFBSSxFQUVZLElBQWhCVCxFQUFLTCxTQUNSSyxFQUFPLEVBQUUsSUFBSVUsT0FHZCxJQUFJQyxFQUFPckIsVUFFWGdCLEVBQUtDLEVBQUtDLEVBQUtHLEVBQUssS0FFcEIsSUFBSSxJQUFJakIsRUFBSSxFQUFHQSxFQUFJTSxFQUFLTCxPQUFRRCxLQUUvQlksR0FBTUssRUFBS1gsRUFBS04sS0FDUCxJQUFLWSxHQUFNLElBQ3BCQyxHQUFNSSxFQUFLWCxFQUFLTixLQUNQLElBQUthLEdBQU0sSUFDcEJDLEdBQU1HLEVBQUtYLEVBQUtOLEtBQ1AsSUFBS2MsR0FBTSxHQUdyQixPQUFPLFdBQ04sSUFBSUksRUFBSSxRQUFVTixFQUFTLHVCQUFKRyxFQUd2QixPQUZBSCxFQUFLQyxFQUNMQSxFQUFLQyxFQUNFQSxFQUFLSSxHQUFLSCxFQUFRLEVBQUpHIiwiZmlsZSI6Ii9Vc2Vycy9ncmVnL21lL3Nlc3Npb25zLTJkL25vZGVfbW9kdWxlcy9AdGF0dW1jcmVhdGl2ZS9yYW5kb20vcHJuZy9hbGVhLmpzIn0=",
    "var Alea=require(5);module.exports=function(){var r=Alea.apply(this,arguments);return function(e,a,n){a=void 0===a?1:a;var t=(e=void 0===e?0:e)+r()*(a-e);return n?parseInt(t,10):t}};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhbmRvbS5qcyJdLCJuYW1lcyI6WyJBbGVhIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyYW5kb20iLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJtaW4iLCJtYXgiLCJpc0Jvb2xlYW4iLCJ1bmRlZmluZWQiLCJ2YWx1ZSIsInBhcnNlSW50Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxLQUFPQyxRQUFRLGVBRW5CQyxPQUFPQyxRQUFVLFdBRWhCLElBQUlDLEVBQVNKLEtBQUtLLE1BQU1DLEtBQU1DLFdBRTlCLE9BQU8sU0FBdUJDLEVBQUtDLEVBQUtDLEdBR3ZDRCxPQUFjRSxJQUFSRixFQUFvQixFQUFJQSxFQUM5QixJQUFJRyxHQUZKSixPQUFjRyxJQUFSSCxFQUFvQixFQUFJQSxHQUVaSixLQUFZSyxFQUFNRCxHQUVwQyxPQUFPRSxFQUFZRyxTQUFVRCxFQUFPLElBQU9BIiwiZmlsZSI6Ii9Vc2Vycy9ncmVnL21lL3Nlc3Npb25zLTJkL25vZGVfbW9kdWxlcy9AdGF0dW1jcmVhdGl2ZS9yYW5kb20vcmFuZG9tLmpzIn0=",
    "function keyCode(e){if(e&&\"object\"==typeof e){var o=e.which||e.keyCode||e.charCode;o&&(e=o)}if(\"number\"==typeof e)return names[e];var a,r=String(e);return(a=codes[r.toLowerCase()])?a:(a=aliases[r.toLowerCase()])||(1===r.length?r.charCodeAt(0):void 0)}keyCode.isEventKey=function(e,o){if(e&&\"object\"==typeof e){var a=e.which||e.keyCode||e.charCode;if(null==a)return!1;if(\"string\"==typeof o){var r;if(r=codes[o.toLowerCase()])return r===a;if(r=aliases[o.toLowerCase()])return r===a}else if(\"number\"==typeof o)return o===a;return!1}},exports=module.exports=keyCode;var codes=exports.code=exports.codes={backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,\"pause/break\":19,\"caps lock\":20,esc:27,space:32,\"page up\":33,\"page down\":34,end:35,home:36,left:37,up:38,right:39,down:40,insert:45,delete:46,command:91,\"left command\":91,\"right command\":93,\"numpad *\":106,\"numpad +\":107,\"numpad -\":109,\"numpad .\":110,\"numpad /\":111,\"num lock\":144,\"scroll lock\":145,\"my computer\":182,\"my calculator\":183,\";\":186,\"=\":187,\",\":188,\"-\":189,\".\":190,\"/\":191,\"`\":192,\"[\":219,\"\\\\\":220,\"]\":221,\"'\":222},aliases=exports.aliases={windows:91,\"⇧\":16,\"⌥\":18,\"⌃\":17,\"⌘\":91,ctl:17,control:17,option:18,pause:19,break:19,caps:20,return:13,escape:27,spc:32,spacebar:32,pgup:33,pgdn:34,ins:45,del:46,cmd:91};for(i=97;i<123;i++)codes[String.fromCharCode(i)]=i-32;for(var i=48;i<58;i++)codes[i-48]=i;for(i=1;i<13;i++)codes[\"f\"+i]=i+111;for(i=0;i<10;i++)codes[\"numpad \"+i]=i+96;var names=exports.names=exports.title={};for(i in codes)names[codes[i]]=i;for(var alias in aliases)codes[alias]=aliases[alias];\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImtleUNvZGUiLCJzZWFyY2hJbnB1dCIsImhhc0tleUNvZGUiLCJ3aGljaCIsImNoYXJDb2RlIiwibmFtZXMiLCJmb3VuZE5hbWVkS2V5Iiwic2VhcmNoIiwiU3RyaW5nIiwiY29kZXMiLCJ0b0xvd2VyQ2FzZSIsImFsaWFzZXMiLCJsZW5ndGgiLCJjaGFyQ29kZUF0IiwiaXNFdmVudEtleSIsImV2ZW50IiwibmFtZU9yQ29kZSIsImV4cG9ydHMiLCJtb2R1bGUiLCJjb2RlIiwiYmFja3NwYWNlIiwidGFiIiwiZW50ZXIiLCJzaGlmdCIsImN0cmwiLCJhbHQiLCJwYXVzZS9icmVhayIsImNhcHMgbG9jayIsImVzYyIsInNwYWNlIiwicGFnZSB1cCIsInBhZ2UgZG93biIsImVuZCIsImhvbWUiLCJsZWZ0IiwidXAiLCJyaWdodCIsImRvd24iLCJpbnNlcnQiLCJkZWxldGUiLCJjb21tYW5kIiwibGVmdCBjb21tYW5kIiwicmlnaHQgY29tbWFuZCIsIm51bXBhZCAqIiwibnVtcGFkICsiLCJudW1wYWQgLSIsIm51bXBhZCAuIiwibnVtcGFkIC8iLCJudW0gbG9jayIsInNjcm9sbCBsb2NrIiwibXkgY29tcHV0ZXIiLCJteSBjYWxjdWxhdG9yIiwiOyIsIj0iLCIsIiwiLSIsIi4iLCIvIiwiYCIsIlsiLCJcXCIsIl0iLCInIiwid2luZG93cyIsIuKHpyIsIuKMpSIsIuKMgyIsIuKMmCIsImN0bCIsImNvbnRyb2wiLCJvcHRpb24iLCJwYXVzZSIsImJyZWFrIiwiY2FwcyIsInJldHVybiIsImVzY2FwZSIsInNwYyIsInNwYWNlYmFyIiwicGd1cCIsInBnZG4iLCJpbnMiLCJkZWwiLCJjbWQiLCJpIiwiZnJvbUNoYXJDb2RlIiwidGl0bGUiLCJhbGlhcyJdLCJtYXBwaW5ncyI6IkFBV0EsU0FBU0EsUUFBUUMsR0FFZixHQUFJQSxHQUFlLGlCQUFvQkEsRUFBYSxDQUNsRCxJQUFJQyxFQUFhRCxFQUFZRSxPQUFTRixFQUFZRCxT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",
    "function lerp(e,r,l){return e*(1-l)+r*l}module.exports=lerp;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImxlcnAiLCJ2MCIsInYxIiwidCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLEtBQUtDLEVBQUlDLEVBQUlDLEdBQ2xCLE9BQU9GLEdBQUksRUFBRUUsR0FBR0QsRUFBR0MsRUFFdkJDLE9BQU9DLFFBQVVMIiwiZmlsZSI6Ii9Vc2Vycy9ncmVnL21lL3Nlc3Npb25zLTJkL25vZGVfbW9kdWxlcy9sZXJwL2luZGV4LmpzIn0=",
    "!function(){\"use strict\";function t(i,n){if(!(this instanceof t))return new t(i,n);this._maxEntries=Math.max(4,i||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),n&&this._initFormat(n),this.clear()}function i(t,i){t.bbox=n(t,0,t.children.length,i)}function n(t,i,n,r){for(var o,a=e(),s=i;s<n;s++)o=t.children[s],h(a,t.leaf?r(o):o.bbox);return a}function e(){return[1/0,1/0,-1/0,-1/0]}function h(t,i){return t[0]=Math.min(t[0],i[0]),t[1]=Math.min(t[1],i[1]),t[2]=Math.max(t[2],i[2]),t[3]=Math.max(t[3],i[3]),t}function r(t,i){return t.bbox[0]-i.bbox[0]}function o(t,i){return t.bbox[1]-i.bbox[1]}function a(t){return(t[2]-t[0])*(t[3]-t[1])}function s(t){return t[2]-t[0]+(t[3]-t[1])}function l(t,i){return t[0]<=i[0]&&t[1]<=i[1]&&i[2]<=t[2]&&i[3]<=t[3]}function u(t,i){return i[0]<=t[2]&&i[1]<=t[3]&&i[2]>=t[0]&&i[3]>=t[1]}function f(t,i,n,e,h){for(var r,o=[i,n];o.length;)(n=o.pop())-(i=o.pop())<=e||(c(t,i,n,r=i+Math.ceil((n-i)/e/2)*e,h),o.push(i,r,r,n))}function c(t,i,n,e,h){for(var r,o,a,s,l,u,f;n>i;){for(n-i>600&&(r=n-i+1,o=e-i+1,a=Math.log(r),s=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*s*(r-s)/r)*(o-r/2<0?-1:1),c(t,Math.max(i,Math.floor(e-o*s/r+l)),Math.min(n,Math.floor(e+(r-o)*s/r+l)),e,h)),u=t[e],o=i,f=n,d(t,i,e),h(t[n],u)>0&&d(t,i,n);o<f;){for(d(t,o,f),o++,f--;h(t[o],u)<0;)o++;for(;h(t[f],u)>0;)f--}0===h(t[i],u)?d(t,i,f):d(t,++f,n),f<=e&&(i=f+1),e<=f&&(n=f-1)}}function d(t,i,n){var e=t[i];t[i]=t[n],t[n]=e}t.prototype={all:function(){return this._all(this.data,[])},search:function(t){var i=this.data,n=[],e=this.toBBox;if(!u(t,i.bbox))return n;for(var h,r,o,a,s=[];i;){for(h=0,r=i.children.length;h<r;h++)o=i.children[h],u(t,a=i.leaf?e(o):o.bbox)&&(i.leaf?n.push(o):l(t,a)?this._all(o,n):s.push(o));i=s.pop()}return n},collides:function(t){var i=this.data,n=this.toBBox;if(!u(t,i.bbox))return!1;for(var e,h,r,o,a=[];i;){for(e=0,h=i.children.length;e<h;e++)if(r=i.children[e],u(t,o=i.leaf?n(r):r.bbox)){if(i.leaf||l(t,o))return!0;a.push(r)}i=a.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0,n=t.length;i<n;i++)this.insert(t[i]);return this}var e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){var h=this.data;this.data=e,e=h}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data={children:[],height:1,bbox:e(),leaf:!0},this},remove:function(t){if(!t)return this;for(var i,n,e,h,r=this.data,o=this.toBBox(t),a=[],s=[];r||a.length;){if(r||(r=a.pop(),n=a[a.length-1],i=s.pop(),h=!0),r.leaf&&-1!==(e=r.children.indexOf(t)))return r.children.splice(e,1),a.push(r),this._condense(a),this;h||r.leaf||!l(r.bbox,o)?n?(i++,r=n.children[i],h=!1):r=null:(a.push(r),s.push(i),i=0,n=r,r=r.children[0])}return this},toBBox:function(t){return t},compareMinX:function(t,i){return t[0]-i[0]},compareMinY:function(t,i){return t[1]-i[1]},toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},_build:function(t,n,e,h){var r,o=e-n+1,a=this._maxEntries;if(o<=a)return i(r={children:t.slice(n,e+1),height:1,bbox:null,leaf:!0},this.toBBox),r;h||(h=Math.ceil(Math.log(o)/Math.log(a)),a=Math.ceil(o/Math.pow(a,h-1))),r={children:[],height:h,bbox:null,leaf:!1};var s,l,u,c,d=Math.ceil(o/a),x=d*Math.ceil(Math.sqrt(a));for(f(t,n,e,x,this.compareMinX),s=n;s<=e;s+=x)for(f(t,s,u=Math.min(s+x-1,e),d,this.compareMinY),l=s;l<=u;l+=d)c=Math.min(l+d-1,u),r.children.push(this._build(t,l,c,h-1));return i(r,this.toBBox),r},_chooseSubtree:function(t,i,n,e){for(var h,r,o,s,l,u,f,c,d,x;e.push(i),!i.leaf&&e.length-1!==n;){for(f=c=1/0,h=0,r=i.children.length;h<r;h++)l=a((o=i.children[h]).bbox),d=t,x=o.bbox,(u=(Math.max(x[2],d[2])-Math.min(x[0],d[0]))*(Math.max(x[3],d[3])-Math.min(x[1],d[1]))-l)<c?(c=u,f=l<f?l:f,s=o):u===c&&l<f&&(f=l,s=o);i=s||i.children[0]}return i},_insert:function(t,i,n){var e=this.toBBox,r=n?t.bbox:e(t),o=[],a=this._chooseSubtree(r,this.data,i,o);for(a.children.push(t),h(a.bbox,r);i>=0&&o[i].children.length>this._maxEntries;)this._split(o,i),i--;this._adjustParentBBoxes(r,o,i)},_split:function(t,n){var e=t[n],h=e.children.length,r=this._minEntries;this._chooseSplitAxis(e,r,h);var o=this._chooseSplitIndex(e,r,h),a={children:e.children.splice(o,e.children.length-o),height:e.height,bbox:null,leaf:!1};e.leaf&&(a.leaf=!0),i(e,this.toBBox),i(a,this.toBBox),n?t[n-1].children.push(a):this._splitRoot(e,a)},_splitRoot:function(t,n){this.data={children:[t,n],height:t.height+1,bbox:null,leaf:!1},i(this.data,this.toBBox)},_chooseSplitIndex:function(t,i,e){var h,r,o,s,l,u,f,c,d,x,p,b,M,m;for(u=f=1/0,h=i;h<=e-i;h++)r=n(t,0,h,this.toBBox),o=n(t,h,e,this.toBBox),d=r,x=o,p=void 0,b=void 0,M=void 0,m=void 0,p=Math.max(d[0],x[0]),b=Math.max(d[1],x[1]),M=Math.min(d[2],x[2]),m=Math.min(d[3],x[3]),s=Math.max(0,M-p)*Math.max(0,m-b),l=a(r)+a(o),s<u?(u=s,c=h,f=l<f?l:f):s===u&&l<f&&(f=l,c=h);return c},_chooseSplitAxis:function(t,i,n){var e=t.leaf?this.compareMinX:r,h=t.leaf?this.compareMinY:o;this._allDistMargin(t,i,n,e)<this._allDistMargin(t,i,n,h)&&t.children.sort(e)},_allDistMargin:function(t,i,e,r){t.children.sort(r);var o,a,l=this.toBBox,u=n(t,0,i,l),f=n(t,e-i,e,l),c=s(u)+s(f);for(o=i;o<e-i;o++)a=t.children[o],h(u,t.leaf?l(a):a.bbox),c+=s(u);for(o=e-i-1;o>=i;o--)a=t.children[o],h(f,t.leaf?l(a):a.bbox),c+=s(f);return c},_adjustParentBBoxes:function(t,i,n){for(var e=n;e>=0;e--)h(i[e].bbox,t)},_condense:function(t){for(var n,e=t.length-1;e>=0;e--)0===t[e].children.length?e>0?(n=t[e-1].children).splice(n.indexOf(t[e]),1):this.clear():i(t[e],this.toBBox)},_initFormat:function(t){var i=[\"return a\",\" - b\",\";\"];this.compareMinX=new Function(\"a\",\"b\",i.join(t[0])),this.compareMinY=new Function(\"a\",\"b\",i.join(t[1])),this.toBBox=new Function(\"a\",\"return [a\"+t.join(\", a\")+\"];\")}},\"function\"==typeof define&&define.amd?define(\"rbush\",function(){return t}):\"undefined\"!=typeof module?module.exports=t:\"undefined\"!=typeof self?self.rbush=t:window.rbush=t}();\n\n//# sourceMappingURL=data:application/json;base64,",
    "!function(){\"use strict\";var r=.5*(Math.sqrt(3)-1),e=(3-Math.sqrt(3))/6,t=1/6,a=(Math.sqrt(5)-1)/4,o=(5-Math.sqrt(5))/20;function i(r){var e;e=\"function\"==typeof r?r:r?function(){var r=0,e=0,t=0,a=1,o=(i=4022871197,function(r){r=r.toString();for(var e=0;e<r.length;e++){var t=.02519603282416938*(i+=r.charCodeAt(e));t-=i=t>>>0,i=(t*=i)>>>0,i+=4294967296*(t-=i)}return 2.3283064365386963e-10*(i>>>0)});var i;r=o(\" \"),e=o(\" \"),t=o(\" \");for(var n=0;n<arguments.length;n++)(r-=o(arguments[n]))<0&&(r+=1),(e-=o(arguments[n]))<0&&(e+=1),(t-=o(arguments[n]))<0&&(t+=1);return o=null,function(){var o=2091639*r+2.3283064365386963e-10*a;return r=e,e=t,t=o-(a=0|o)}}(r):Math.random,this.p=n(e),this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512);for(var t=0;t<512;t++)this.perm[t]=this.p[255&t],this.permMod12[t]=this.perm[t]%12}function n(r){var e,t=new Uint8Array(256);for(e=0;e<256;e++)t[e]=e;for(e=0;e<255;e++){var a=e+~~(r()*(256-e)),o=t[e];t[e]=t[a],t[a]=o}return t}i.prototype={grad3:new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),grad4:new Float32Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]),noise2D:function(t,a){var o,i,n=this.permMod12,f=this.perm,s=this.grad3,v=0,h=0,l=0,u=(t+a)*r,d=Math.floor(t+u),p=Math.floor(a+u),M=(d+p)*e,m=t-(d-M),c=a-(p-M);m>c?(o=1,i=0):(o=0,i=1);var y=m-o+e,w=c-i+e,g=m-1+2*e,A=c-1+2*e,x=255&d,q=255&p,D=.5-m*m-c*c;if(D>=0){var S=3*n[x+f[q]];v=(D*=D)*D*(s[S]*m+s[S+1]*c)}var U=.5-y*y-w*w;if(U>=0){var b=3*n[x+o+f[q+i]];h=(U*=U)*U*(s[b]*y+s[b+1]*w)}var F=.5-g*g-A*A;if(F>=0){var N=3*n[x+1+f[q+1]];l=(F*=F)*F*(s[N]*g+s[N+1]*A)}return 70*(v+h+l)},noise3D:function(r,e,a){var o,i,n,f,s,v,h,l,u,d,p=this.permMod12,M=this.perm,m=this.grad3,c=(r+e+a)*(1/3),y=Math.floor(r+c),w=Math.floor(e+c),g=Math.floor(a+c),A=(y+w+g)*t,x=r-(y-A),q=e-(w-A),D=a-(g-A);x>=q?q>=D?(s=1,v=0,h=0,l=1,u=1,d=0):x>=D?(s=1,v=0,h=0,l=1,u=0,d=1):(s=0,v=0,h=1,l=1,u=0,d=1):q<D?(s=0,v=0,h=1,l=0,u=1,d=1):x<D?(s=0,v=1,h=0,l=0,u=1,d=1):(s=0,v=1,h=0,l=1,u=1,d=0);var S=x-s+t,U=q-v+t,b=D-h+t,F=x-l+2*t,N=q-u+2*t,C=D-d+2*t,P=x-1+.5,T=q-1+.5,_=D-1+.5,j=255&y,k=255&w,z=255&g,B=.6-x*x-q*q-D*D;if(B<0)o=0;else{var E=3*p[j+M[k+M[z]]];o=(B*=B)*B*(m[E]*x+m[E+1]*q+m[E+2]*D)}var G=.6-S*S-U*U-b*b;if(G<0)i=0;else{var H=3*p[j+s+M[k+v+M[z+h]]];i=(G*=G)*G*(m[H]*S+m[H+1]*U+m[H+2]*b)}var I=.6-F*F-N*N-C*C;if(I<0)n=0;else{var J=3*p[j+l+M[k+u+M[z+d]]];n=(I*=I)*I*(m[J]*F+m[J+1]*N+m[J+2]*C)}var K=.6-P*P-T*T-_*_;if(K<0)f=0;else{var L=3*p[j+1+M[k+1+M[z+1]]];f=(K*=K)*K*(m[L]*P+m[L+1]*T+m[L+2]*_)}return 32*(o+i+n+f)},noise4D:function(r,e,t,i){var n,f,s,v,h,l,u,d,p,M,m,c,y,w,g,A,x,q=this.perm,D=this.grad4,S=(r+e+t+i)*a,U=Math.floor(r+S),b=Math.floor(e+S),F=Math.floor(t+S),N=Math.floor(i+S),C=(U+b+F+N)*o,P=r-(U-C),T=e-(b-C),_=t-(F-C),j=i-(N-C),k=0,z=0,B=0,E=0;P>T?k++:z++,P>_?k++:B++,P>j?k++:E++,T>_?z++:B++,T>j?z++:E++,_>j?B++:E++;var G=P-(l=k>=3?1:0)+o,H=T-(u=z>=3?1:0)+o,I=_-(d=B>=3?1:0)+o,J=j-(p=E>=3?1:0)+o,K=P-(M=k>=2?1:0)+2*o,L=T-(m=z>=2?1:0)+2*o,O=_-(c=B>=2?1:0)+2*o,Q=j-(y=E>=2?1:0)+2*o,R=P-(w=k>=1?1:0)+3*o,V=T-(g=z>=1?1:0)+3*o,W=_-(A=B>=1?1:0)+3*o,X=j-(x=E>=1?1:0)+3*o,Y=P-1+4*o,Z=T-1+4*o,$=_-1+4*o,rr=j-1+4*o,er=255&U,tr=255&b,ar=255&F,or=255&N,ir=.6-P*P-T*T-_*_-j*j;if(ir<0)n=0;else{var nr=q[er+q[tr+q[ar+q[or]]]]%32*4;n=(ir*=ir)*ir*(D[nr]*P+D[nr+1]*T+D[nr+2]*_+D[nr+3]*j)}var fr=.6-G*G-H*H-I*I-J*J;if(fr<0)f=0;else{var sr=q[er+l+q[tr+u+q[ar+d+q[or+p]]]]%32*4;f=(fr*=fr)*fr*(D[sr]*G+D[sr+1]*H+D[sr+2]*I+D[sr+3]*J)}var vr=.6-K*K-L*L-O*O-Q*Q;if(vr<0)s=0;else{var hr=q[er+M+q[tr+m+q[ar+c+q[or+y]]]]%32*4;s=(vr*=vr)*vr*(D[hr]*K+D[hr+1]*L+D[hr+2]*O+D[hr+3]*Q)}var lr=.6-R*R-V*V-W*W-X*X;if(lr<0)v=0;else{var ur=q[er+w+q[tr+g+q[ar+A+q[or+x]]]]%32*4;v=(lr*=lr)*lr*(D[ur]*R+D[ur+1]*V+D[ur+2]*W+D[ur+3]*X)}var dr=.6-Y*Y-Z*Z-$*$-rr*rr;if(dr<0)h=0;else{var pr=q[er+1+q[tr+1+q[ar+1+q[or+1]]]]%32*4;h=(dr*=dr)*dr*(D[pr]*Y+D[pr+1]*Z+D[pr+2]*$+D[pr+3]*rr)}return 27*(n+f+s+v+h)}},i._buildPermutationTable=n,\"undefined\"!=typeof define&&define.amd&&define(function(){return i}),\"undefined\"!=typeof exports?exports.SimplexNoise=i:\"undefined\"!=typeof window&&(window.SimplexNoise=i),\"undefined\"!=typeof module&&(module.exports=i)}();\n\n//# sourceMappingURL=data:application/json;base64,"
  ]
}